@page "/"
@inject HttpClient Http
@inject AppState AppState
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@using Caelicus.Models.Json
@implements IDisposable

<h1>Vehicles: @_vehicles.Count</h1>

@code {
    private List<Graph<VertexInfo, EdgeInfo>> _graphs = new List<Graph<VertexInfo, EdgeInfo>>();
    private List<JsonVehicle> _vehicles = new List<JsonVehicle>();

    protected override async Task OnInitializedAsync()
    {
        // Register app state changed event
        AppState.StateChanged += async (source, property) => await AppState_StateChanged(source, property);

        try
        {
            _vehicles = await Http.GetFromJsonAsync<List<JsonVehicle>>("data/vehicles/vehicles.json");
        }
        catch
        {
            Console.WriteLine($"Error while parsing vehicles Json file. Please verify it.");
        }
    }

    private async Task AppState_StateChanged(ComponentBase source, string property)
    {
        if (source != this)
        {
            await InvokeAsync(StateHasChanged);
        }
    }

    void IDisposable.Dispose()
    {
        AppState.StateChanged -= async (source, property) => await AppState_StateChanged(source, property);
    }
}
