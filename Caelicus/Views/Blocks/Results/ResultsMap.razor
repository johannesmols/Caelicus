@inject AppState AppState
@inject IJSRuntime JsRuntime
@implements IDisposable

<div id="mapContainer" style="width: 100%; height: 65vh;">
    <LeafletMap Map="_map" />
</div>

@code {
    private BlazorLeaflet.Map _map;

    private BlazorLeaflet.Models.LatLng _startAt = new BlazorLeaflet.Models.LatLng(47.5574007f, 16.3918687f);

    protected override async Task OnInitializedAsync()
    {
        // Register app state changed event
        AppState.StateChanged += async (source, property) => await AppState_StateChanged(source, property);

        _map = new BlazorLeaflet.Map(JsRuntime)
        {
            Center = _startAt,
            Zoom = 4.8f
        };
    }

    private async Task AppState_StateChanged(ComponentBase source, string property)
    {
        if (source != this)
        {
            await InvokeAsync(StateHasChanged);
        }
    }

    void IDisposable.Dispose()
    {
        AppState.StateChanged -= async (source, property) => await AppState_StateChanged(source, property);
    }
}
